​​​​​Quokka PRO 'index.js'(node: v18.13.0, plugins: jsdom - quokka - plugin)​​​​
 
Server läuft auf Port: 9999
at ​​​​​​​​`Server läuft auf Port: ${ BACKEND_PORT ...index.js: 152​

IncomingMessage {
    _readableState: 
   ReadableState {
        objectMode: false,
            highWaterMark: 16384,
                buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
            pipes:
        [Multipart {
            _writableState:
                WritableState {
                    objectMode: false,
                highWaterMark: 16384,
                finalCalled: false,
                needDrain: true,
                ending: false,
                ended: false,
                finished: false,
                destroyed: false,
                decodeStrings: true,
                defaultEncoding: 'utf8',
                length: 64808,
                writing: true,
                corked: 0,
                sync: true,
                bufferProcessing: false,
                onwrite: [λ: bound onwrite],
                writecb: [λ: nop],
                writelen: 64808,
                afterWriteTickInfo: null,
                buffered: [],
                bufferedIndex: 0,
                allBuffers: true,
                allNoop: true,
                pendingcb: 1,
                constructed: true,
                prefinished: false,
                errorEmitted: false,
                emitClose: true,
                autoDestroy: true,
                errored: null,
                closed: false,
                closeEmitted: false,
                [Symbol(kOnFinished)]: []
            },
            _events:
            {
                field: [λ],
                file: [λ],
                error: [[λ: onerror], [λ]],
                partsLimit: [λ],
                filesLimit: [λ],
                fieldsLimit: [λ],
                close: [[λ], [Object]],
                unpipe: [λ: onunpipe],
                finish: { [λ: bound onceWrapper] listener: [λ: onfinish]
    }
},
_eventsCount: 9,
    _maxListeners: undefined,
        _fileEndsLeft: 1,
            _fileStream: 
           FileStream {
    _readableState: 
              ReadableState {
        objectMode: false,
            highWaterMark: 16384,
                buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
            pipes: [],
                flowing: null,
                    ended: false,
                        endEmitted: false,
                            reading: false,
                                constructed: true,
                                    sync: true,
                                        needReadable: false,
                                            emittedReadable: false,
                                                readableListening: false,
                                                    resumeScheduled: false,
                                                        errorEmitted: false,
                                                            emitClose: true,
                                                                autoDestroy: true,
                                                                    destroyed: false,
                                                                        errored: null,
                                                                            closed: false,
                                                                                closeEmitted: false,
                                                                                    defaultEncoding: 'utf8',
                                                                                        awaitDrainWriters: null,
                                                                                            multiAwaitDrain: false,
                                                                                                readingMore: false,
                                                                                                    dataEmitted: false,
                                                                                                        decoder: null,
                                                                                                            encoding: null,
                                                                                                                [Symbol(kPaused)]: null
    },
    _events: { end: [Object] },
    _eventsCount: 1,
        _maxListeners: undefined,
            truncated: false,
                _readcb: null,
                    [Symbol(kCapture)]: false
},
_complete: false,
    _hparser: null,
        _bparser: 
           SBMH {
    maxMatches: Infinity,
        matches: 1,
            _cb: [λ: ssCb],
                _lookbehindSize: 0,
                    _needle: <Buffer 0d 0a 2d 2d 2d 2d 2d 2d 57 65 62 4b 69 74 46 6f 72 6d 42 6f 75 6e 64 61 72 79 55 66 61 36 76 50 7a 6d 54 4c 6f 4f 64 74 43 4a >,
                        _bufPos: 40,
                            _lookbehind: <Buffer 0d 0a 00 00 00 00 00 00 38 cc 00 30 01 00 00 00 5d c3 84 0b 00 00 00 00 b8 cd 00 30 01 00 00 00 5e 2e 1e 21 00 00 00 00 38 ce >,
                                _occ:
    [42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        40,
        42,
        42,
        41,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        34,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        12,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        23,
        1,
        42,
        42,
        27,
        42,
        42,
        42,
        42,
        30,
        6,
        42,
        42,
        4,
        10,
        42,
        42,
        42,
        7,
        15,
        42,
        33,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        13,
        31,
        42,
        3,
        32,
        14,
        42,
        42,
        29,
        42,
        42,
        42,
        8,
        20,
        5,
        42,
        42,
        17,
        42,
        2,
        21,
        11,
        42,
        42,
        16,
        9,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42,
        42]
},
_writecb: [λ: bound onwrite],
    _finalcb: null,
        [Symbol(kCapture)]: false } ],
flowing: true,
    ended: false,
        endEmitted: false,
            reading: true,
                constructed: true,
                    sync: false,
                        needReadable: true,
                            emittedReadable: false,
                                readableListening: false,
                                    resumeScheduled: false,
                                        errorEmitted: false,
                                            emitClose: true,
                                                autoDestroy: true,
                                                    destroyed: false,
                                                        errored: null,
                                                            closed: false,
                                                                closeEmitted: false,
                                                                    defaultEncoding: 'utf8',
                                                                        awaitDrainWriters: null,
                                                                            multiAwaitDrain: false,
                                                                                readingMore: false,
                                                                                    dataEmitted: true,
                                                                                        decoder: null,
                                                                                            encoding: null,
                                                                                                [Symbol(kPaused)]: false },
_events:
{
    end: { [λ: bound onceWrapper] listener: [λ: onend] },
    data: [λ: ondata]
},
_eventsCount: 2,
    _maxListeners: undefined,
        socket: 
   Socket {
    connecting: false,
        _hadError: false,
            _parent: null,
                _host: null,
                    _closeAfterHandlingError: false,
                        _readableState: 
      ReadableState {
        objectMode: false,
            highWaterMark: 16384,
                buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
            pipes: [],
                flowing: true,
                    ended: false,
                        endEmitted: false,
                            reading: true,
                                constructed: true,
                                    sync: false,
                                        needReadable: true,
                                            emittedReadable: false,
                                                readableListening: false,
                                                    resumeScheduled: true,
                                                        errorEmitted: false,
                                                            emitClose: false,
                                                                autoDestroy: true,
                                                                    destroyed: false,
                                                                        errored: null,
                                                                            closed: false,
                                                                                closeEmitted: false,
                                                                                    defaultEncoding: 'utf8',
                                                                                        awaitDrainWriters: null,
                                                                                            multiAwaitDrain: false,
                                                                                                readingMore: false,
                                                                                                    dataEmitted: false,
                                                                                                        decoder: null,
                                                                                                            encoding: null,
                                                                                                                [Symbol(kPaused)]: false
    },
    _events:
    {
        end: [[λ: onReadableStreamEnd], [λ: bound socketOnEnd]],
            timeout: [λ: socketOnTimeout],
                data: [λ: bound socketOnData],
                    error: [[λ: socketOnError], [λ: onevent]],
                        close:
        [[λ: bound socketOnClose],
        [λ: onServerResponseClose],
        [λ: onevent]],
            drain: [λ: bound socketOnDrain],
                resume: [λ: onSocketResume],
                    pause: [λ: onSocketPause]
    },
    _eventsCount: 8,
        _maxListeners: undefined,
            _writableState: 
      WritableState {
        objectMode: false,
            highWaterMark: 16384,
                finalCalled: false,
                    needDrain: false,
                        ending: false,
                            ended: false,
                                finished: false,
                                    destroyed: false,
                                        decodeStrings: false,
                                            defaultEncoding: 'utf8',
                                                length: 0,
                                                    writing: false,
                                                        corked: 0,
                                                            sync: true,
                                                                bufferProcessing: false,
                                                                    onwrite: [λ: bound onwrite],
                                                                        writecb: null,
                                                                            writelen: 0,
                                                                                afterWriteTickInfo: null,
                                                                                    buffered: [],
                                                                                        bufferedIndex: 0,
                                                                                            allBuffers: true,
                                                                                                allNoop: true,
                                                                                                    pendingcb: 0,
                                                                                                        constructed: true,
                                                                                                            prefinished: false,
                                                                                                                errorEmitted: false,
                                                                                                                    emitClose: false,
                                                                                                                        autoDestroy: true,
                                                                                                                            errored: null,
                                                                                                                                closed: false,
                                                                                                                                    closeEmitted: false,
                                                                                                                                        [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
        _sockname: null,
            _pendingData: null,
                _pendingEncoding: '',
                    server: 
      Server {
        maxHeaderSize: undefined,
            insecureHTTPParser: undefined,
                requestTimeout: 300000,
                    headersTimeout: 60000,
                        keepAliveTimeout: 5000,
                            connectionsCheckingInterval: 30000,
                                _events:
        {
            request:
            {
                [λ: app]
                _events: { mount: [λ: onmount] },
                _eventsCount: 1,
                    _maxListeners: undefined,
                        setMaxListeners: [λ: setMaxListeners],
                            getMaxListeners: [λ: getMaxListeners],
                                emit: [λ: emit],
                                    addListener: [λ: addListener],
                                        on: [λ: addListener],
                                            prependListener: [λ: prependListener],
                                                once: [λ: once],
                                                    prependOnceListener: [λ: prependOnceListener],
                                                        removeListener: [λ: removeListener],
                                                            off: [λ: removeListener],
                                                                removeAllListeners: [λ: removeAllListeners],
                                                                    listeners: [λ: listeners],
                                                                        rawListeners: [λ: rawListeners],
                                                                            listenerCount: [λ: listenerCount],
                                                                                eventNames: [λ: eventNames],
                                                                                    init: [λ: init],
                                                                                        defaultConfiguration: [λ: defaultConfiguration],
                                                                                            lazyrouter: [λ: lazyrouter],
                                                                                                handle: [λ: handle],
                                                                                                    use: [λ: use],
                                                                                                        route: [λ: route],
                                                                                                            engine: [λ: engine],
                                                                                                                param: [λ: param],
                                                                                                                    set: [λ: set],
                                                                                                                        path: [λ: path],
                                                                                                                            enabled: [λ: enabled],
                                                                                                                                disabled: [λ: disabled],
                                                                                                                                    enable: [λ: enable],
                                                                                                                                        disable: [λ: disable],
                                                                                                                                            acl: [λ],
                                                                                                                                                bind: [λ],
                                                                                                                                                    checkout: [λ],
                                                                                                                                                        connect: [λ],
                                                                                                                                                            copy: [λ],
                                                                                                                                                                delete: [λ],
                                                                                                                                                                    get: [λ],
                                                                                                                                                                        head: [λ],
                                                                                                                                                                            link: [λ],
                                                                                                                                                                                lock: [λ],
                                                                                                                                                                                    'm-search': [λ],
                                                                                                                                                                                        merge: [λ],
                                                                                                                                                                                            mkactivity: [λ],
                                                                                                                                                                                                mkcalendar: [λ],
                                                                                                                                                                                                    mkcol: [λ],
                                                                                                                                                                                                        move: [λ],
                                                                                                                                                                                                            notify: [λ],
                                                                                                                                                                                                                options: [λ],
                                                                                                                                                                                                                    patch: [λ],
                                                                                                                                                                                                                        post: [λ],
                                                                                                                                                                                                                            propfind: [λ],
                                                                                                                                                                                                                                proppatch: [λ],
                                                                                                                                                                                                                                    purge: [λ],
                                                                                                                                                                                                                                        put: [λ],
                                                                                                                                                                                                                                            rebind: [λ],
                                                                                                                                                                                                                                                report: [λ],
                                                                                                                                                                                                                                                    search: [λ],
                                                                                                                                                                                                                                                        source: [λ],
                                                                                                                                                                                                                                                            subscribe: [λ],
                                                                                                                                                                                                                                                                trace: [λ],
                                                                                                                                                                                                                                                                    unbind: [λ],
                                                                                                                                                                                                                                                                        unlink: [λ],
                                                                                                                                                                                                                                                                            unlock: [λ],
                                                                                                                                                                                                                                                                                unsubscribe: [λ],
                                                                                                                                                                                                                                                                                    all: [λ: all],
                                                                                                                                                                                                                                                                                        del: [λ],
                                                                                                                                                                                                                                                                                            render: [λ: render],
                                                                                                                                                                                                                                                                                                listen: [λ: listen],
                                                                                                                                                                                                                                                                                                    request: IncomingMessage { app: [Circular] },
                response: ServerResponse { app: [Circular] },
                cache: { },
                engines: { },
                settings:
                {
                    'x-powered-by': true,
                        etag: 'weak',
                            'etag fn': [λ: generateETag],
                                env: 'development',
                                    'query parser': 'extended',
                                        'query parser fn': [λ: parseExtendedQueryString],
                                            'subdomain offset': 2,
                                                'trust proxy': false,
                                                    'trust proxy fn': [λ: trustNone],
                                                        view: [λ: View],
                                                            views: '/Users/supercoder/Desktop/96_Tag_cloudinary_Bilder_speichern/backEnd/views',
                                                                'jsonp callback name': 'callback'
                },
                locals: { settings: [Object] },
                mountpath: '/',
                    _router:
                {
                    [λ: router]
                    params: { },
                    _params: [],
                        caseSensitive: false,
                            mergeParams: undefined,
                                strict: false,
                                    stack: [Object]
                }
            },
            connection: [λ: connectionListener]
        },
        _eventsCount: 2,
            _maxListeners: undefined,
                _connections: 1,
                    _handle: 
         TCP {
            reading: false,
                onconnection: [λ: onconnection],
                    [Symbol(owner_symbol)]: [Circular]
        },
        _usingWorkers: false,
            _workers: [],
                _unref: false,
                    allowHalfOpen: true,
                        pauseOnConnect: false,
                            noDelay: true,
                                keepAlive: false,
                                    keepAliveInitialDelay: 0,
                                        httpAllowHalfOpen: false,
                                            timeout: 0,
                                                maxHeadersCount: null,
                                                    maxRequestsPerSocket: 0,
                                                        _connectionKey: '6::::9999',
                                                            [Symbol(IncomingMessage)]: [λ: IncomingMessage],
                                                                [Symbol(ServerResponse)]: [λ: ServerResponse],
                                                                    [Symbol(kCapture)]: false,
                                                                        [Symbol(async_id_symbol)]: 62,
                                                                            [Symbol(http.server.connections)]: ConnectionsList { },
        [Symbol(http.server.connectionsCheckingInterval)]: 
         Timeout {
            _idleTimeout: 30000,
                _idlePrev: [TimersList],
                    _idleNext: [TimersList],
                        _idleStart: 744,
                            _onTimeout: [Function: bound checkConnections],
                                _timerArgs: undefined,
                                    _repeat: 30000,
                                        _destroyed: false,
                                            [Symbol(refed)]: false,
                                                [Symbol(kHasPrimitive)]: false,
                                                    [Symbol(asyncId)]: 61,
                                                        [Symbol(triggerId)]: 0
        },
        [Symbol(kUniqueHeaders)]: null
    },
    _server: 
      Server {
        maxHeaderSize: undefined,
            insecureHTTPParser: undefined,
                requestTimeout: 300000,
                    headersTimeout: 60000,
                        keepAliveTimeout: 5000,
                            connectionsCheckingInterval: 30000,
                                _events:
        {
            request:
            {
                [λ: app]
                _events: { mount: [λ: onmount] },
                _eventsCount: 1,
                    _maxListeners: undefined,
                        setMaxListeners: [λ: setMaxListeners],
                            getMaxListeners: [λ: getMaxListeners],
                                emit: [λ: emit],
                                    addListener: [λ: addListener],
                                        on: [λ: addListener],
                                            prependListener: [λ: prependListener],
                                                once: [λ: once],
                                                    prependOnceListener: [λ: prependOnceListener],
                                                        removeListener: [λ: removeListener],
                                                            off: [λ: removeListener],
                                                                removeAllListeners: [λ: removeAllListeners],
                                                                    listeners: [λ: listeners],
                                                                        rawListeners: [λ: rawListeners],
                                                                            listenerCount: [λ: listenerCount],
                                                                                eventNames: [λ: eventNames],
                                                                                    init: [λ: init],
                                                                                        defaultConfiguration: [λ: defaultConfiguration],
                                                                                            lazyrouter: [λ: lazyrouter],
                                                                                                handle: [λ: handle],
                                                                                                    use: [λ: use],
                                                                                                        route: [λ: route],
                                                                                                            engine: [λ: engine],
                                                                                                                param: [λ: param],
                                                                                                                    set: [λ: set],
                                                                                                                        path: [λ: path],
                                                                                                                            enabled: [λ: enabled],
                                                                                                                                disabled: [λ: disabled],
                                                                                                                                    enable: [λ: enable],
                                                                                                                                        disable: [λ: disable],
                                                                                                                                            acl: [λ],
                                                                                                                                                bind: [λ],
                                                                                                                                                    checkout: [λ],
                                                                                                                                                        connect: [λ],
                                                                                                                                                            copy: [λ],
                                                                                                                                                                delete: [λ],
                                                                                                                                                                    get: [λ],
                                                                                                                                                                        head: [λ],
                                                                                                                                                                            link: [λ],
                                                                                                                                                                                lock: [λ],
                                                                                                                                                                                    'm-search': [λ],
                                                                                                                                                                                        merge: [λ],
                                                                                                                                                                                            mkactivity: [λ],
                                                                                                                                                                                                mkcalendar: [λ],
                                                                                                                                                                                                    mkcol: [λ],
                                                                                                                                                                                                        move: [λ],
                                                                                                                                                                                                            notify: [λ],
                                                                                                                                                                                                                options: [λ],
                                                                                                                                                                                                                    patch: [λ],
                                                                                                                                                                                                                        post: [λ],
                                                                                                                                                                                                                            propfind: [λ],
                                                                                                                                                                                                                                proppatch: [λ],
                                                                                                                                                                                                                                    purge: [λ],
                                                                                                                                                                                                                                        put: [λ],
                                                                                                                                                                                                                                            rebind: [λ],
                                                                                                                                                                                                                                                report: [λ],
                                                                                                                                                                                                                                                    search: [λ],
                                                                                                                                                                                                                                                        source: [λ],
                                                                                                                                                                                                                                                            subscribe: [λ],
                                                                                                                                                                                                                                                                trace: [λ],
                                                                                                                                                                                                                                                                    unbind: [λ],
                                                                                                                                                                                                                                                                        unlink: [λ],
                                                                                                                                                                                                                                                                            unlock: [λ],
                                                                                                                                                                                                                                                                                unsubscribe: [λ],
                                                                                                                                                                                                                                                                                    all: [λ: all],
                                                                                                                                                                                                                                                                                        del: [λ],
                                                                                                                                                                                                                                                                                            render: [λ: render],
                                                                                                                                                                                                                                                                                                listen: [λ: listen],
                                                                                                                                                                                                                                                                                                    request: IncomingMessage { app: [Circular] },
                response: ServerResponse { app: [Circular] },
                cache: { },
                engines: { },
                settings:
                {
                    'x-powered-by': true,
                        etag: 'weak',
                            'etag fn': [λ: generateETag],
                                env: 'development',
                                    'query parser': 'extended',
                                        'query parser fn': [λ: parseExtendedQueryString],
                                            'subdomain offset': 2,
                                                'trust proxy': false,
                                                    'trust proxy fn': [λ: trustNone],
                                                        view: [λ: View],
                                                            views: '/Users/supercoder/Desktop/96_Tag_cloudinary_Bilder_speichern/backEnd/views',
                                                                'jsonp callback name': 'callback'
                },
                locals: { settings: [Object] },
                mountpath: '/',
                    _router:
                {
                    [λ: router]
                    params: { },
                    _params: [],
                        caseSensitive: false,
                            mergeParams: undefined,
                                strict: false,
                                    stack: [Object]
                }
            },
            connection: [λ: connectionListener]
        },
        _eventsCount: 2,
            _maxListeners: undefined,
                _connections: 1,
                    _handle: 
         TCP {
            reading: false,
                onconnection: [λ: onconnection],
                    [Symbol(owner_symbol)]: [Circular]
        },
        _usingWorkers: false,
            _workers: [],
                _unref: false,
                    allowHalfOpen: true,
                        pauseOnConnect: false,
                            noDelay: true,
                                keepAlive: false,
                                    keepAliveInitialDelay: 0,
                                        httpAllowHalfOpen: false,
                                            timeout: 0,
                                                maxHeadersCount: null,
                                                    maxRequestsPerSocket: 0,
                                                        _connectionKey: '6::::9999',
                                                            [Symbol(IncomingMessage)]: [λ: IncomingMessage],
                                                                [Symbol(ServerResponse)]: [λ: ServerResponse],
                                                                    [Symbol(kCapture)]: false,
                                                                        [Symbol(async_id_symbol)]: 62,
                                                                            [Symbol(http.server.connections)]: ConnectionsList { },
        [Symbol(http.server.connectionsCheckingInterval)]: 
         Timeout {
            _idleTimeout: 30000,
                _idlePrev: [TimersList],
                    _idleNext: [TimersList],
                        _idleStart: 744,
                            _onTimeout: [Function: bound checkConnections],
                                _timerArgs: undefined,
                                    _repeat: 30000,
                                        _destroyed: false,
                                            [Symbol(refed)]: false,
                                                [Symbol(kHasPrimitive)]: false,
                                                    [Symbol(asyncId)]: 61,
                                                        [Symbol(triggerId)]: 0
        },
        [Symbol(kUniqueHeaders)]: null
    },
    parser: 
      HTTPParser {
        0: null,
            1: [λ: parserOnHeaders],
                2: [λ: parserOnHeadersComplete],
                    3: [λ: parserOnBody],
                        4: [λ: parserOnMessageComplete],
                            5: [λ: bound onParserExecute],
                                6: [λ: bound onParserTimeout],
                                    _headers: [],
                                        _url: '',
                                            socket: [Circular],
                                                incoming: [Circular],
                                                    outgoing: null,
                                                        maxHeaderPairs: 2000,
                                                            _consumed: true,
                                                                onIncoming: [λ: bound parserOnIncoming],
                                                                    [Symbol(resource_symbol)]: HTTPServerAsyncResource { type: 'HTTPINCOMINGMESSAGE', socket: [Circular] }
    },
    on: [λ: socketListenerWrap],
        addListener: [λ: socketListenerWrap],
            prependListener: [λ: socketListenerWrap],
                setEncoding: [λ: socketSetEncoding],
                    _paused: false,
                        _httpMessage: 
      ServerResponse {
        _events:
        {
            finish: [[λ: bound resOnFinish], [λ: onevent]],
                end: [λ: onevent]
        },
        _eventsCount: 2,
            _maxListeners: undefined,
                outputData: [],
                    outputSize: 0,
                        writable: true,
                            destroyed: false,
                                _last: false,
                                    chunkedEncoding: false,
                                        shouldKeepAlive: true,
                                            maxRequestsOnConnectionReached: false,
                                                _defaultKeepAlive: true,
                                                    useChunkedEncodingByDefault: true,
                                                        sendDate: true,
                                                            _removedConnection: false,
                                                                _removedContLen: false,
                                                                    _removedTE: false,
                                                                        strictContentLength: false,
                                                                            _contentLength: null,
                                                                                _hasBody: true,
                                                                                    _trailer: '',
                                                                                        finished: false,
                                                                                            _headerSent: false,
                                                                                                _closed: false,
                                                                                                    socket: [Circular],
                                                                                                        _header: null,
                                                                                                            _keepAliveTimeout: 5000,
                                                                                                                _onPendingData: [λ: bound updateOutgoingData],
                                                                                                                    req: [Circular],
                                                                                                                        _sent100: false,
                                                                                                                            _expect_continue: false,
                                                                                                                                _maxRequestsPerSocket: 0,
                                                                                                                                    locals: { },
        _startAt: undefined,
            _startTime: undefined,
                writeHead: [λ: writeHead],
                    __onFinished: { [λ: listener] queue: [[λ: logRequest]] },
        [Symbol(kCapture)]: false,
            [Symbol(kBytesWritten)]: 0,
                [Symbol(kEndCalled)]: false,
                    [Symbol(kNeedDrain)]: false,
                        [Symbol(corked)]: 0,
                            [Symbol(kOutHeaders)]:
        {
            'x-powered-by': ['X-Powered-By', 'Express'],
                'access-control-allow-origin': ['Access-Control-Allow-Origin', 'http://localhost:3000'],
                    vary: ['Vary', 'Origin']
        },
        [Symbol(errored)]: null,
            [Symbol(kUniqueHeaders)]: null
    },
    _peername: { address: '::1', family: 'IPv6', port: 54855 },
    [Symbol(async_id_symbol)]: 68,
        [Symbol(kHandle)]: 
      TCP {
        reading: false,
            onconnection: null,
                _consumed: true,
                    [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
                [Symbol(kBufferCb)]: null,
                    [Symbol(kBufferGen)]: null,
                        [Symbol(kCapture)]: false,
                            [Symbol(kSetNoDelay)]: true,
                                [Symbol(kSetKeepAlive)]: false,
                                    [Symbol(kSetKeepAliveInitialDelay)]: 0,
                                        [Symbol(kBytesRead)]: 0,
                                            [Symbol(kBytesWritten)]: 0
},
httpVersionMajor: 1,
    httpVersionMinor: 1,
        httpVersion: '1.1',
            complete: false,
                rawHeaders:
['Host',
    'localhost:9999',
    'Connection',
    'keep-alive',
    'Content-Length',
    '1979904',
    'Pragma',
    'no-cache',
    'Cache-Control',
    'no-cache',
    'sec-ch-ua',
    '"Chromium";v="112", "Google Chrome";v="112", "Not:A-Brand";v="99"',
    'sec-ch-ua-platform',
    '"macOS"',
    'sec-ch-ua-mobile',
    '?0',
    'User-Agent',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36',
    'Content-Type',
    'multipart/form-data; boundary=----WebKitFormBoundaryUfa6vPzmTLoOdtCJ',
    'Accept',
    '*/*',
    'Origin',
    'http://localhost:3000',
    'Sec-Fetch-Site',
    'same-site',
    'Sec-Fetch-Mode',
    'cors',
    'Sec-Fetch-Dest',
    'empty',
    'Referer',
    'http://localhost:3000/',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Accept-Language',
    'de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7'],
    rawTrailers: [],
        aborted: false,
            upgrade: false,
                url: '/directupload',
                    method: 'POST',
                        statusCode: null,
                            statusMessage: null,
                                client: 
   Socket {
    connecting: false,
        _hadError: false,
            _parent: null,
                _host: null,
                    _closeAfterHandlingError: false,
                        _readableState: 
      ReadableState {
        objectMode: false,
            highWaterMark: 16384,
                buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
            pipes: [],
                flowing: true,
                    ended: false,
                        endEmitted: false,
                            reading: true,
                                constructed: true,
                                    sync: false,
                                        needReadable: true,
                                            emittedReadable: false,
                                                readableListening: false,
                                                    resumeScheduled: true,
                                                        errorEmitted: false,
                                                            emitClose: false,
                                                                autoDestroy: true,
                                                                    destroyed: false,
                                                                        errored: null,
                                                                            closed: false,
                                                                                closeEmitted: false,
                                                                                    defaultEncoding: 'utf8',
                                                                                        awaitDrainWriters: null,
                                                                                            multiAwaitDrain: false,
                                                                                                readingMore: false,
                                                                                                    dataEmitted: false,
                                                                                                        decoder: null,
                                                                                                            encoding: null,
                                                                                                                [Symbol(kPaused)]: false
    },
    _events:
    {
        end: [[λ: onReadableStreamEnd], [λ: bound socketOnEnd]],
            timeout: [λ: socketOnTimeout],
                data: [λ: bound socketOnData],
                    error: [[λ: socketOnError], [λ: onevent]],
                        close:
        [[λ: bound socketOnClose],
        [λ: onServerResponseClose],
        [λ: onevent]],
            drain: [λ: bound socketOnDrain],
                resume: [λ: onSocketResume],
                    pause: [λ: onSocketPause]
    },
    _eventsCount: 8,
        _maxListeners: undefined,
            _writableState: 
      WritableState {
        objectMode: false,
            highWaterMark: 16384,
                finalCalled: false,
                    needDrain: false,
                        ending: false,
                            ended: false,
                                finished: false,
                                    destroyed: false,
                                        decodeStrings: false,
                                            defaultEncoding: 'utf8',
                                                length: 0,
                                                    writing: false,
                                                        corked: 0,
                                                            sync: true,
                                                                bufferProcessing: false,
                                                                    onwrite: [λ: bound onwrite],
                                                                        writecb: null,
                                                                            writelen: 0,
                                                                                afterWriteTickInfo: null,
                                                                                    buffered: [],
                                                                                        bufferedIndex: 0,
                                                                                            allBuffers: true,
                                                                                                allNoop: true,
                                                                                                    pendingcb: 0,
                                                                                                        constructed: true,
                                                                                                            prefinished: false,
                                                                                                                errorEmitted: false,
                                                                                                                    emitClose: false,
                                                                                                                        autoDestroy: true,
                                                                                                                            errored: null,
                                                                                                                                closed: false,
                                                                                                                                    closeEmitted: false,
                                                                                                                                        [Symbol(kOnFinished)]: []
    },
    allowHalfOpen: true,
        _sockname: null,
            _pendingData: null,
                _pendingEncoding: '',
                    server: 
      Server {
        maxHeaderSize: undefined,
            insecureHTTPParser: undefined,
                requestTimeout: 300000,
                    headersTimeout: 60000,
                        keepAliveTimeout: 5000,
                            connectionsCheckingInterval: 30000,
                                _events:
        {
            request:
            {
                [λ: app]
                _events: { mount: [λ: onmount] },
                _eventsCount: 1,
                    _maxListeners: undefined,
                        setMaxListeners: [λ: setMaxListeners],
                            getMaxListeners: [λ: getMaxListeners],
                                emit: [λ: emit],
                                    addListener: [λ: addListener],
                                        on: [λ: addListener],
                                            prependListener: [λ: prependListener],
                                                once: [λ: once],
                                                    prependOnceListener: [λ: prependOnceListener],
                                                        removeListener: [λ: removeListener],
                                                            off: [λ: removeListener],
                                                                removeAllListeners: [λ: removeAllListeners],
                                                                    listeners: [λ: listeners],
                                                                        rawListeners: [λ: rawListeners],
                                                                            listenerCount: [λ: listenerCount],
                                                                                eventNames: [λ: eventNames],
                                                                                    init: [λ: init],
                                                                                        defaultConfiguration: [λ: defaultConfiguration],
                                                                                            lazyrouter: [λ: lazyrouter],
                                                                                                handle: [λ: handle],
                                                                                                    use: [λ: use],
                                                                                                        route: [λ: route],
                                                                                                            engine: [λ: engine],
                                                                                                                param: [λ: param],
                                                                                                                    set: [λ: set],
                                                                                                                        path: [λ: path],
                                                                                                                            enabled: [λ: enabled],
                                                                                                                                disabled: [λ: disabled],
                                                                                                                                    enable: [λ: enable],
                                                                                                                                        disable: [λ: disable],
                                                                                                                                            acl: [λ],
                                                                                                                                                bind: [λ],
                                                                                                                                                    checkout: [λ],
                                                                                                                                                        connect: [λ],
                                                                                                                                                            copy: [λ],
                                                                                                                                                                delete: [λ],
                                                                                                                                                                    get: [λ],
                                                                                                                                                                        head: [λ],
                                                                                                                                                                            link: [λ],
                                                                                                                                                                                lock: [λ],
                                                                                                                                                                                    'm-search': [λ],
                                                                                                                                                                                        merge: [λ],
                                                                                                                                                                                            mkactivity: [λ],
                                                                                                                                                                                                mkcalendar: [λ],
                                                                                                                                                                                                    mkcol: [λ],
                                                                                                                                                                                                        move: [λ],
                                                                                                                                                                                                            notify: [λ],
                                                                                                                                                                                                                options: [λ],
                                                                                                                                                                                                                    patch: [λ],
                                                                                                                                                                                                                        post: [λ],
                                                                                                                                                                                                                            propfind: [λ],
                                                                                                                                                                                                                                proppatch: [λ],
                                                                                                                                                                                                                                    purge: [λ],
                                                                                                                                                                                                                                        put: [λ],
                                                                                                                                                                                                                                            rebind: [λ],
                                                                                                                                                                                                                                                report: [λ],
                                                                                                                                                                                                                                                    search: [λ],
                                                                                                                                                                                                                                                        source: [λ],
                                                                                                                                                                                                                                                            subscribe: [λ],
                                                                                                                                                                                                                                                                trace: [λ],
                                                                                                                                                                                                                                                                    unbind: [λ],
                                                                                                                                                                                                                                                                        unlink: [λ],
                                                                                                                                                                                                                                                                            unlock: [λ],
                                                                                                                                                                                                                                                                                unsubscribe: [λ],
                                                                                                                                                                                                                                                                                    all: [λ: all],
                                                                                                                                                                                                                                                                                        del: [λ],
                                                                                                                                                                                                                                                                                            render: [λ: render],
                                                                                                                                                                                                                                                                                                listen: [λ: listen],
                                                                                                                                                                                                                                                                                                    request: IncomingMessage { app: [Circular] },
                response: ServerResponse { app: [Circular] },
                cache: { },
                engines: { },
                settings:
                {
                    'x-powered-by': true,
                        etag: 'weak',
                            'etag fn': [λ: generateETag],
                                env: 'development',
                                    'query parser': 'extended',
                                        'query parser fn': [λ: parseExtendedQueryString],
                                            'subdomain offset': 2,
                                                'trust proxy': false,
                                                    'trust proxy fn': [λ: trustNone],
                                                        view: [λ: View],
                                                            views: '/Users/supercoder/Desktop/96_Tag_cloudinary_Bilder_speichern/backEnd/views',
                                                                'jsonp callback name': 'callback'
                },
                locals: { settings: [Object] },
                mountpath: '/',
                    _router:
                {
                    [λ: router]
                    params: { },
                    _params: [],
                        caseSensitive: false,
                            mergeParams: undefined,
                                strict: false,
                                    stack: [Object]
                }
            },
            connection: [λ: connectionListener]
        },
        _eventsCount: 2,
            _maxListeners: undefined,
                _connections: 1,
                    _handle: 
         TCP {
            reading: false,
                onconnection: [λ: onconnection],
                    [Symbol(owner_symbol)]: [Circular]
        },
        _usingWorkers: false,
            _workers: [],
                _unref: false,
                    allowHalfOpen: true,
                        pauseOnConnect: false,
                            noDelay: true,
                                keepAlive: false,
                                    keepAliveInitialDelay: 0,
                                        httpAllowHalfOpen: false,
                                            timeout: 0,
                                                maxHeadersCount: null,
                                                    maxRequestsPerSocket: 0,
                                                        _connectionKey: '6::::9999',
                                                            [Symbol(IncomingMessage)]: [λ: IncomingMessage],
                                                                [Symbol(ServerResponse)]: [λ: ServerResponse],
                                                                    [Symbol(kCapture)]: false,
                                                                        [Symbol(async_id_symbol)]: 62,
                                                                            [Symbol(http.server.connections)]: ConnectionsList { },
        [Symbol(http.server.connectionsCheckingInterval)]: 
         Timeout {
            _idleTimeout: 30000,
                _idlePrev: [TimersList],
                    _idleNext: [TimersList],
                        _idleStart: 744,
                            _onTimeout: [Function: bound checkConnections],
                                _timerArgs: undefined,
                                    _repeat: 30000,
                                        _destroyed: false,
                                            [Symbol(refed)]: false,
                                                [Symbol(kHasPrimitive)]: false,
                                                    [Symbol(asyncId)]: 61,
                                                        [Symbol(triggerId)]: 0
        },
        [Symbol(kUniqueHeaders)]: null
    },
    _server: 
      Server {
        maxHeaderSize: undefined,
            insecureHTTPParser: undefined,
                requestTimeout: 300000,
                    headersTimeout: 60000,
                        keepAliveTimeout: 5000,
                            connectionsCheckingInterval: 30000,
                                _events:
        {
            request:
            {
                [λ: app]
                _events: { mount: [λ: onmount] },
                _eventsCount: 1,
                    _maxListeners: undefined,
                        setMaxListeners: [λ: setMaxListeners],
                            getMaxListeners: [λ: getMaxListeners],
                                emit: [λ: emit],
                                    addListener: [λ: addListener],
                                        on: [λ: addListener],
                                            prependListener: [λ: prependListener],
                                                once: [λ: once],
                                                    prependOnceListener: [λ: prependOnceListener],
                                                        removeListener: [λ: removeListener],
                                                            off: [λ: removeListener],
                                                                removeAllListeners: [λ: removeAllListeners],
                                                                    listeners: [λ: listeners],
                                                                        rawListeners: [λ: rawListeners],
                                                                            listenerCount: [λ: listenerCount],
                                                                                eventNames: [λ: eventNames],
                                                                                    init: [λ: init],
                                                                                        defaultConfiguration: [λ: defaultConfiguration],
                                                                                            lazyrouter: [λ: lazyrouter],
                                                                                                handle: [λ: handle],
                                                                                                    use: [λ: use],
                                                                                                        route: [λ: route],
                                                                                                            engine: [λ: engine],
                                                                                                                param: [λ: param],
                                                                                                                    set: [λ: set],
                                                                                                                        path: [λ: path],
                                                                                                                            enabled: [λ: enabled],
                                                                                                                                disabled: [λ: disabled],
                                                                                                                                    enable: [λ: enable],
                                                                                                                                        disable: [λ: disable],
                                                                                                                                            acl: [λ],
                                                                                                                                                bind: [λ],
                                                                                                                                                    checkout: [λ],
                                                                                                                                                        connect: [λ],
                                                                                                                                                            copy: [λ],
                                                                                                                                                                delete: [λ],
                                                                                                                                                                    get: [λ],
                                                                                                                                                                        head: [λ],
                                                                                                                                                                            link: [λ],
                                                                                                                                                                                lock: [λ],
                                                                                                                                                                                    'm-search': [λ],
                                                                                                                                                                                        merge: [λ],
                                                                                                                                                                                            mkactivity: [λ],
                                                                                                                                                                                                mkcalendar: [λ],
                                                                                                                                                                                                    mkcol: [λ],
                                                                                                                                                                                                        move: [λ],
                                                                                                                                                                                                            notify: [λ],
                                                                                                                                                                                                                options: [λ],
                                                                                                                                                                                                                    patch: [λ],
                                                                                                                                                                                                                        post: [λ],
                                                                                                                                                                                                                            propfind: [λ],
                                                                                                                                                                                                                                proppatch: [λ],
                                                                                                                                                                                                                                    purge: [λ],
                                                                                                                                                                                                                                        put: [λ],
                                                                                                                                                                                                                                            rebind: [λ],
                                                                                                                                                                                                                                                report: [λ],
                                                                                                                                                                                                                                                    search: [λ],
                                                                                                                                                                                                                                                        source: [λ],
                                                                                                                                                                                                                                                            subscribe: [λ],
                                                                                                                                                                                                                                                                trace: [λ],
                                                                                                                                                                                                                                                                    unbind: [λ],
                                                                                                                                                                                                                                                                        unlink: [λ],
                                                                                                                                                                                                                                                                            unlock: [λ],
                                                                                                                                                                                                                                                                                unsubscribe: [λ],
                                                                                                                                                                                                                                                                                    all: [λ: all],
                                                                                                                                                                                                                                                                                        del: [λ],
                                                                                                                                                                                                                                                                                            render: [λ: render],
                                                                                                                                                                                                                                                                                                listen: [λ: listen],
                                                                                                                                                                                                                                                                                                    request: IncomingMessage { app: [Circular] },
                response: ServerResponse { app: [Circular] },
                cache: { },
                engines: { },
                settings:
                {
                    'x-powered-by': true,
                        etag: 'weak',
                            'etag fn': [λ: generateETag],
                                env: 'development',
                                    'query parser': 'extended',
                                        'query parser fn': [λ: parseExtendedQueryString],
                                            'subdomain offset': 2,
                                                'trust proxy': false,
                                                    'trust proxy fn': [λ: trustNone],
                                                        view: [λ: View],
                                                            views: '/Users/supercoder/Desktop/96_Tag_cloudinary_Bilder_speichern/backEnd/views',
                                                                'jsonp callback name': 'callback'
                },
                locals: { settings: [Object] },
                mountpath: '/',
                    _router:
                {
                    [λ: router]
                    params: { },
                    _params: [],
                        caseSensitive: false,
                            mergeParams: undefined,
                                strict: false,
                                    stack: [Object]
                }
            },
            connection: [λ: connectionListener]
        },
        _eventsCount: 2,
            _maxListeners: undefined,
                _connections: 1,
                    _handle: 
         TCP {
            reading: false,
                onconnection: [λ: onconnection],
                    [Symbol(owner_symbol)]: [Circular]
        },
        _usingWorkers: false,
            _workers: [],
                _unref: false,
                    allowHalfOpen: true,
                        pauseOnConnect: false,
                            noDelay: true,
                                keepAlive: false,
                                    keepAliveInitialDelay: 0,
                                        httpAllowHalfOpen: false,
                                            timeout: 0,
                                                maxHeadersCount: null,
                                                    maxRequestsPerSocket: 0,
                                                        _connectionKey: '6::::9999',
                                                            [Symbol(IncomingMessage)]: [λ: IncomingMessage],
                                                                [Symbol(ServerResponse)]: [λ: ServerResponse],
                                                                    [Symbol(kCapture)]: false,
                                                                        [Symbol(async_id_symbol)]: 62,
                                                                            [Symbol(http.server.connections)]: ConnectionsList { },
        [Symbol(http.server.connectionsCheckingInterval)]: 
         Timeout {
            _idleTimeout: 30000,
                _idlePrev: [TimersList],
                    _idleNext: [TimersList],
                        _idleStart: 744,
                            _onTimeout: [Function: bound checkConnections],
                                _timerArgs: undefined,
                                    _repeat: 30000,
                                        _destroyed: false,
                                            [Symbol(refed)]: false,
                                                [Symbol(kHasPrimitive)]: false,
                                                    [Symbol(asyncId)]: 61,
                                                        [Symbol(triggerId)]: 0
        },
        [Symbol(kUniqueHeaders)]: null
    },
    parser: 
      HTTPParser {
        0: null,
            1: [λ: parserOnHeaders],
                2: [λ: parserOnHeadersComplete],
                    3: [λ: parserOnBody],
                        4: [λ: parserOnMessageComplete],
                            5: [λ: bound onParserExecute],
                                6: [λ: bound onParserTimeout],
                                    _headers: [],
                                        _url: '',
                                            socket: [Circular],
                                                incoming: [Circular],
                                                    outgoing: null,
                                                        maxHeaderPairs: 2000,
                                                            _consumed: true,
                                                                onIncoming: [λ: bound parserOnIncoming],
                                                                    [Symbol(resource_symbol)]: HTTPServerAsyncResource { type: 'HTTPINCOMINGMESSAGE', socket: [Circular] }
    },
    on: [λ: socketListenerWrap],
        addListener: [λ: socketListenerWrap],
            prependListener: [λ: socketListenerWrap],
                setEncoding: [λ: socketSetEncoding],
                    _paused: false,
                        _httpMessage: 
      ServerResponse {
        _events:
        {
            finish: [[λ: bound resOnFinish], [λ: onevent]],
                end: [λ: onevent]
        },
        _eventsCount: 2,
            _maxListeners: undefined,
                outputData: [],
                    outputSize: 0,
                        writable: true,
                            destroyed: false,
                                _last: false,
                                    chunkedEncoding: false,
                                        shouldKeepAlive: true,
                                            maxRequestsOnConnectionReached: false,
                                                _defaultKeepAlive: true,
                                                    useChunkedEncodingByDefault: true,
                                                        sendDate: true,
                                                            _removedConnection: false,
                                                                _removedContLen: false,
                                                                    _removedTE: false,
                                                                        strictContentLength: false,
                                                                            _contentLength: null,
                                                                                _hasBody: true,
                                                                                    _trailer: '',
                                                                                        finished: false,
                                                                                            _headerSent: false,
                                                                                                _closed: false,
                                                                                                    socket: [Circular],
                                                                                                        _header: null,
                                                                                                            _keepAliveTimeout: 5000,
                                                                                                                _onPendingData: [λ: bound updateOutgoingData],
                                                                                                                    req: [Circular],
                                                                                                                        _sent100: false,
                                                                                                                            _expect_continue: false,
                                                                                                                                _maxRequestsPerSocket: 0,
                                                                                                                                    locals: { },
        _startAt: undefined,
            _startTime: undefined,
                writeHead: [λ: writeHead],
                    __onFinished: { [λ: listener] queue: [[λ: logRequest]] },
        [Symbol(kCapture)]: false,
            [Symbol(kBytesWritten)]: 0,
                [Symbol(kEndCalled)]: false,
                    [Symbol(kNeedDrain)]: false,
                        [Symbol(corked)]: 0,
                            [Symbol(kOutHeaders)]:
        {
            'x-powered-by': ['X-Powered-By', 'Express'],
                'access-control-allow-origin': ['Access-Control-Allow-Origin', 'http://localhost:3000'],
                    vary: ['Vary', 'Origin']
        },
        [Symbol(errored)]: null,
            [Symbol(kUniqueHeaders)]: null
    },
    _peername: { address: '::1', family: 'IPv6', port: 54855 },
    [Symbol(async_id_symbol)]: 68,
        [Symbol(kHandle)]: 
      TCP {
        reading: false,
            onconnection: null,
                _consumed: true,
                    [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
                [Symbol(kBufferCb)]: null,
                    [Symbol(kBufferGen)]: null,
                        [Symbol(kCapture)]: false,
                            [Symbol(kSetNoDelay)]: true,
                                [Symbol(kSetKeepAlive)]: false,
                                    [Symbol(kSetKeepAliveInitialDelay)]: 0,
                                        [Symbol(kBytesRead)]: 0,
                                            [Symbol(kBytesWritten)]: 0
},
_consuming: true,
    _dumped: false,
        next: [λ: next],
            baseUrl: '',
                originalUrl: '/directupload',
                    _parsedUrl: 
   Url {
    protocol: null,
        slashes: null,
            auth: null,
                host: null,
                    port: null,
                        hostname: null,
                            hash: null,
                                search: null,
                                    query: null,
                                        pathname: '/directupload',
                                            path: '/directupload',
                                                href: '/directupload',
                                                    _raw: '/directupload'
},
params: { },
query: { },
res: 
   ServerResponse {
    _events:
    {
        finish: [[λ: bound resOnFinish], [λ: onevent]],
            end: [λ: onevent]
    },
    _eventsCount: 2,
        _maxListeners: undefined,
            outputData: [],
                outputSize: 0,
                    writable: true,
                        destroyed: false,
                            _last: false,
                                chunkedEncoding: false,
                                    shouldKeepAlive: true,
                                        maxRequestsOnConnectionReached: false,
                                            _defaultKeepAlive: true,
                                                useChunkedEncodingByDefault: true,
                                                    sendDate: true,
                                                        _removedConnection: false,
                                                            _removedContLen: false,
                                                                _removedTE: false,
                                                                    strictContentLength: false,
                                                                        _contentLength: null,
                                                                            _hasBody: true,
                                                                                _trailer: '',
                                                                                    finished: false,
                                                                                        _headerSent: false,
                                                                                            _closed: false,
                                                                                                socket: 
      Socket {
        connecting: false,
            _hadError: false,
                _parent: null,
                    _host: null,
                        _closeAfterHandlingError: false,
                            _readableState: 
         ReadableState {
            objectMode: false,
                highWaterMark: 16384,
                    buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
                pipes: [],
                    flowing: true,
                        ended: false,
                            endEmitted: false,
                                reading: true,
                                    constructed: true,
                                        sync: false,
                                            needReadable: true,
                                                emittedReadable: false,
                                                    readableListening: false,
                                                        resumeScheduled: true,
                                                            errorEmitted: false,
                                                                emitClose: false,
                                                                    autoDestroy: true,
                                                                        destroyed: false,
                                                                            errored: null,
                                                                                closed: false,
                                                                                    closeEmitted: false,
                                                                                        defaultEncoding: 'utf8',
                                                                                            awaitDrainWriters: null,
                                                                                                multiAwaitDrain: false,
                                                                                                    readingMore: false,
                                                                                                        dataEmitted: false,
                                                                                                            decoder: null,
                                                                                                                encoding: null,
                                                                                                                    [Symbol(kPaused)]: false
        },
        _events:
        {
            end: [[λ: onReadableStreamEnd], [λ: bound socketOnEnd]],
                timeout: [λ: socketOnTimeout],
                    data: [λ: bound socketOnData],
                        error: [[λ: socketOnError], [λ: onevent]],
                            close:
            [[λ: bound socketOnClose],
            [λ: onServerResponseClose],
            [λ: onevent]],
                drain: [λ: bound socketOnDrain],
                    resume: [λ: onSocketResume],
                        pause: [λ: onSocketPause]
        },
        _eventsCount: 8,
            _maxListeners: undefined,
                _writableState: 
         WritableState {
            objectMode: false,
                highWaterMark: 16384,
                    finalCalled: false,
                        needDrain: false,
                            ending: false,
                                ended: false,
                                    finished: false,
                                        destroyed: false,
                                            decodeStrings: false,
                                                defaultEncoding: 'utf8',
                                                    length: 0,
                                                        writing: false,
                                                            corked: 0,
                                                                sync: true,
                                                                    bufferProcessing: false,
                                                                        onwrite: [λ: bound onwrite],
                                                                            writecb: null,
                                                                                writelen: 0,
                                                                                    afterWriteTickInfo: null,
                                                                                        buffered: [],
                                                                                            bufferedIndex: 0,
                                                                                                allBuffers: true,
                                                                                                    allNoop: true,
                                                                                                        pendingcb: 0,
                                                                                                            constructed: true,
                                                                                                                prefinished: false,
                                                                                                                    errorEmitted: false,
                                                                                                                        emitClose: false,
                                                                                                                            autoDestroy: true,
                                                                                                                                errored: null,
                                                                                                                                    closed: false,
                                                                                                                                        closeEmitted: false,
                                                                                                                                            [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
            _sockname: null,
                _pendingData: null,
                    _pendingEncoding: '',
                        server: 
         Server {
            maxHeaderSize: undefined,
                insecureHTTPParser: undefined,
                    requestTimeout: 300000,
                        headersTimeout: 60000,
                            keepAliveTimeout: 5000,
                                connectionsCheckingInterval: 30000,
                                    _events:
            {
                request:
                {
                    [λ: app]
                    _events: [Object],
                        _eventsCount: 1,
                            _maxListeners: undefined,
                                setMaxListeners: [λ: setMaxListeners],
                                    getMaxListeners: [λ: getMaxListeners],
                                        emit: [λ: emit],
                                            addListener: [λ: addListener],
                                                on: [λ: addListener],
                                                    prependListener: [λ: prependListener],
                                                        once: [λ: once],
                                                            prependOnceListener: [λ: prependOnceListener],
                                                                removeListener: [λ: removeListener],
                                                                    off: [λ: removeListener],
                                                                        removeAllListeners: [λ: removeAllListeners],
                                                                            listeners: [λ: listeners],
                                                                                rawListeners: [λ: rawListeners],
                                                                                    listenerCount: [λ: listenerCount],
                                                                                        eventNames: [λ: eventNames],
                                                                                            init: [λ: init],
                                                                                                defaultConfiguration: [λ: defaultConfiguration],
                                                                                                    lazyrouter: [λ: lazyrouter],
                                                                                                        handle: [λ: handle],
                                                                                                            use: [λ: use],
                                                                                                                route: [λ: route],
                                                                                                                    engine: [λ: engine],
                                                                                                                        param: [λ: param],
                                                                                                                            set: [λ: set],
                                                                                                                                path: [λ: path],
                                                                                                                                    enabled: [λ: enabled],
                                                                                                                                        disabled: [λ: disabled],
                                                                                                                                            enable: [λ: enable],
                                                                                                                                                disable: [λ: disable],
                                                                                                                                                    acl: [λ],
                                                                                                                                                        bind: [λ],
                                                                                                                                                            checkout: [λ],
                                                                                                                                                                connect: [λ],
                                                                                                                                                                    copy: [λ],
                                                                                                                                                                        delete: [λ],
                                                                                                                                                                            get: [λ],
                                                                                                                                                                                head: [λ],
                                                                                                                                                                                    link: [λ],
                                                                                                                                                                                        lock: [λ],
                                                                                                                                                                                            'm-search': [λ],
                                                                                                                                                                                                merge: [λ],
                                                                                                                                                                                                    mkactivity: [λ],
                                                                                                                                                                                                        mkcalendar: [λ],
                                                                                                                                                                                                            mkcol: [λ],
                                                                                                                                                                                                                move: [λ],
                                                                                                                                                                                                                    notify: [λ],
                                                                                                                                                                                                                        options: [λ],
                                                                                                                                                                                                                            patch: [λ],
                                                                                                                                                                                                                                post: [λ],
                                                                                                                                                                                                                                    propfind: [λ],
                                                                                                                                                                                                                                        proppatch: [λ],
                                                                                                                                                                                                                                            purge: [λ],
                                                                                                                                                                                                                                                put: [λ],
                                                                                                                                                                                                                                                    rebind: [λ],
                                                                                                                                                                                                                                                        report: [λ],
                                                                                                                                                                                                                                                            search: [λ],
                                                                                                                                                                                                                                                                source: [λ],
                                                                                                                                                                                                                                                                    subscribe: [λ],
                                                                                                                                                                                                                                                                        trace: [λ],
                                                                                                                                                                                                                                                                            unbind: [λ],
                                                                                                                                                                                                                                                                                unlink: [λ],
                                                                                                                                                                                                                                                                                    unlock: [λ],
                                                                                                                                                                                                                                                                                        unsubscribe: [λ],
                                                                                                                                                                                                                                                                                            all: [λ: all],
                                                                                                                                                                                                                                                                                                del: [λ],
                                                                                                                                                                                                                                                                                                    render: [λ: render],
                                                                                                                                                                                                                                                                                                        listen: [λ: listen],
                                                                                                                                                                                                                                                                                                            request: [Object],
                                                                                                                                                                                                                                                                                                                response: [Object],
                                                                                                                                                                                                                                                                                                                    cache: { },
                    engines: { },
                    settings: [Object],
                        locals: [Object],
                            mountpath: '/',
                                _router: [Object]
                },
                connection: [λ: connectionListener]
            },
            _eventsCount: 2,
                _maxListeners: undefined,
                    _connections: 1,
                        _handle: 
            TCP {
                reading: false,
                    onconnection: [λ: onconnection],
                        [Symbol(owner_symbol)]: [Circular]
            },
            _usingWorkers: false,
                _workers: [],
                    _unref: false,
                        allowHalfOpen: true,
                            pauseOnConnect: false,
                                noDelay: true,
                                    keepAlive: false,
                                        keepAliveInitialDelay: 0,
                                            httpAllowHalfOpen: false,
                                                timeout: 0,
                                                    maxHeadersCount: null,
                                                        maxRequestsPerSocket: 0,
                                                            _connectionKey: '6::::9999',
                                                                [Symbol(IncomingMessage)]: [λ: IncomingMessage],
                                                                    [Symbol(ServerResponse)]: [λ: ServerResponse],
                                                                        [Symbol(kCapture)]: false,
                                                                            [Symbol(async_id_symbol)]: 62,
                                                                                [Symbol(http.server.connections)]: ConnectionsList { },
            [Symbol(http.server.connectionsCheckingInterval)]: 
            Timeout {
                _idleTimeout: 30000,
                    _idlePrev: [TimersList],
                        _idleNext: [TimersList],
                            _idleStart: 744,
                                _onTimeout: [Function: bound checkConnections],
                                    _timerArgs: undefined,
                                        _repeat: 30000,
                                            _destroyed: false,
                                                [Symbol(refed)]: false,
                                                    [Symbol(kHasPrimitive)]: false,
                                                        [Symbol(asyncId)]: 61,
                                                            [Symbol(triggerId)]: 0
            },
            [Symbol(kUniqueHeaders)]: null
        },
        _server: 
         Server {
            maxHeaderSize: undefined,
                insecureHTTPParser: undefined,
                    requestTimeout: 300000,
                        headersTimeout: 60000,
                            keepAliveTimeout: 5000,
                                connectionsCheckingInterval: 30000,
                                    _events:
            {
                request:
                {
                    [λ: app]
                    _events: [Object],
                        _eventsCount: 1,
                            _maxListeners: undefined,
                                setMaxListeners: [λ: setMaxListeners],
                                    getMaxListeners: [λ: getMaxListeners],
                                        emit: [λ: emit],
                                            addListener: [λ: addListener],
                                                on: [λ: addListener],
                                                    prependListener: [λ: prependListener],
                                                        once: [λ: once],
                                                            prependOnceListener: [λ: prependOnceListener],
                                                                removeListener: [λ: removeListener],
                                                                    off: [λ: removeListener],
                                                                        removeAllListeners: [λ: removeAllListeners],
                                                                            listeners: [λ: listeners],
                                                                                rawListeners: [λ: rawListeners],
                                                                                    listenerCount: [λ: listenerCount],
                                                                                        eventNames: [λ: eventNames],
                                                                                            init: [λ: init],
                                                                                                defaultConfiguration: [λ: defaultConfiguration],
                                                                                                    lazyrouter: [λ: lazyrouter],
                                                                                                        handle: [λ: handle],
                                                                                                            use: [λ: use],
                                                                                                                route: [λ: route],
                                                                                                                    engine: [λ: engine],
                                                                                                                        param: [λ: param],
                                                                                                                            set: [λ: set],
                                                                                                                                path: [λ: path],
                                                                                                                                    enabled: [λ: enabled],
                                                                                                                                        disabled: [λ: disabled],
                                                                                                                                            enable: [λ: enable],
                                                                                                                                                disable: [λ: disable],
                                                                                                                                                    acl: [λ],
                                                                                                                                                        bind: [λ],
                                                                                                                                                            checkout: [λ],
                                                                                                                                                                connect: [λ],
                                                                                                                                                                    copy: [λ],
                                                                                                                                                                        delete: [λ],
                                                                                                                                                                            get: [λ],
                                                                                                                                                                                head: [λ],
                                                                                                                                                                                    link: [λ],
                                                                                                                                                                                        lock: [λ],
                                                                                                                                                                                            'm-search': [λ],
                                                                                                                                                                                                merge: [λ],
                                                                                                                                                                                                    mkactivity: [λ],
                                                                                                                                                                                                        mkcalendar: [λ],
                                                                                                                                                                                                            mkcol: [λ],
                                                                                                                                                                                                                move: [λ],
                                                                                                                                                                                                                    notify: [λ],
                                                                                                                                                                                                                        options: [λ],
                                                                                                                                                                                                                            patch: [λ],
                                                                                                                                                                                                                                post: [λ],
                                                                                                                                                                                                                                    propfind: [λ],
                                                                                                                                                                                                                                        proppatch: [λ],
                                                                                                                                                                                                                                            purge: [λ],
                                                                                                                                                                                                                                                put: [λ],
                                                                                                                                                                                                                                                    rebind: [λ],
                                                                                                                                                                                                                                                        report: [λ],
                                                                                                                                                                                                                                                            search: [λ],
                                                                                                                                                                                                                                                                source: [λ],
                                                                                                                                                                                                                                                                    subscribe: [λ],
                                                                                                                                                                                                                                                                        trace: [λ],
                                                                                                                                                                                                                                                                            unbind: [λ],
                                                                                                                                                                                                                                                                                unlink: [λ],
                                                                                                                                                                                                                                                                                    unlock: [λ],
                                                                                                                                                                                                                                                                                        unsubscribe: [λ],
                                                                                                                                                                                                                                                                                            all: [λ: all],
                                                                                                                                                                                                                                                                                                del: [λ],
                                                                                                                                                                                                                                                                                                    render: [λ: render],
                                                                                                                                                                                                                                                                                                        listen: [λ: listen],
                                                                                                                                                                                                                                                                                                            request: [Object],
                                                                                                                                                                                                                                                                                                                response: [Object],
                                                                                                                                                                                                                                                                                                                    cache: { },
                    engines: { },
                    settings: [Object],
                        locals: [Object],
                            mountpath: '/',
                                _router: [Object]
                },
                connection: [λ: connectionListener]
            },
            _eventsCount: 2,
                _maxListeners: undefined,
                    _connections: 1,
                        _handle: 
            TCP {
                reading: false,
                    onconnection: [λ: onconnection],
                        [Symbol(owner_symbol)]: [Circular]
            },
            _usingWorkers: false,
                _workers: [],
                    _unref: false,
                        allowHalfOpen: true,
                            pauseOnConnect: false,
                                noDelay: true,
                                    keepAlive: false,
                                        keepAliveInitialDelay: 0,
                                            httpAllowHalfOpen: false,
                                                timeout: 0,
                                                    maxHeadersCount: null,
                                                        maxRequestsPerSocket: 0,
                                                            _connectionKey: '6::::9999',
                                                                [Symbol(IncomingMessage)]: [λ: IncomingMessage],
                                                                    [Symbol(ServerResponse)]: [λ: ServerResponse],
                                                                        [Symbol(kCapture)]: false,
                                                                            [Symbol(async_id_symbol)]: 62,
                                                                                [Symbol(http.server.connections)]: ConnectionsList { },
            [Symbol(http.server.connectionsCheckingInterval)]: 
            Timeout {
                _idleTimeout: 30000,
                    _idlePrev: [TimersList],
                        _idleNext: [TimersList],
                            _idleStart: 744,
                                _onTimeout: [Function: bound checkConnections],
                                    _timerArgs: undefined,
                                        _repeat: 30000,
                                            _destroyed: false,
                                                [Symbol(refed)]: false,
                                                    [Symbol(kHasPrimitive)]: false,
                                                        [Symbol(asyncId)]: 61,
                                                            [Symbol(triggerId)]: 0
            },
            [Symbol(kUniqueHeaders)]: null
        },
        parser: 
         HTTPParser {
            0: null,
                1: [λ: parserOnHeaders],
                    2: [λ: parserOnHeadersComplete],
                        3: [λ: parserOnBody],
                            4: [λ: parserOnMessageComplete],
                                5: [λ: bound onParserExecute],
                                    6: [λ: bound onParserTimeout],
                                        _headers: [],
                                            _url: '',
                                                socket: [Circular],
                                                    incoming: [Circular],
                                                        outgoing: null,
                                                            maxHeaderPairs: 2000,
                                                                _consumed: true,
                                                                    onIncoming: [λ: bound parserOnIncoming],
                                                                        [Symbol(resource_symbol)]: HTTPServerAsyncResource { type: 'HTTPINCOMINGMESSAGE', socket: [Circular] }
        },
        on: [λ: socketListenerWrap],
            addListener: [λ: socketListenerWrap],
                prependListener: [λ: socketListenerWrap],
                    setEncoding: [λ: socketSetEncoding],
                        _paused: false,
                            _httpMessage: [Circular],
                                _peername: { address: '::1', family: 'IPv6', port: 54855 },
        [Symbol(async_id_symbol)]: 68,
            [Symbol(kHandle)]: 
         TCP {
            reading: false,
                onconnection: null,
                    _consumed: true,
                        [Symbol(owner_symbol)]: [Circular]
        },
        [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
                [Symbol(kBuffer)]: null,
                    [Symbol(kBufferCb)]: null,
                        [Symbol(kBufferGen)]: null,
                            [Symbol(kCapture)]: false,
                                [Symbol(kSetNoDelay)]: true,
                                    [Symbol(kSetKeepAlive)]: false,
                                        [Symbol(kSetKeepAliveInitialDelay)]: 0,
                                            [Symbol(kBytesRead)]: 0,
                                                [Symbol(kBytesWritten)]: 0
    },
    _header: null,
        _keepAliveTimeout: 5000,
            _onPendingData: [λ: bound updateOutgoingData],
                req: [Circular],
                    _sent100: false,
                        _expect_continue: false,
                            _maxRequestsPerSocket: 0,
                                locals: { },
    _startAt: undefined,
        _startTime: undefined,
            writeHead: [λ: writeHead],
                __onFinished: { [λ: listener] queue: [[λ: logRequest]] },
    [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
            [Symbol(kEndCalled)]: false,
                [Symbol(kNeedDrain)]: false,
                    [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]:
    {
        'x-powered-by': ['X-Powered-By', 'Express'],
            'access-control-allow-origin': ['Access-Control-Allow-Origin', 'http://localhost:3000'],
                vary: ['Vary', 'Origin']
    },
    [Symbol(errored)]: null,
        [Symbol(kUniqueHeaders)]: null
},
_startAt: [123774, 105807958],
    _startTime: Sat Apr 29 2023 18: 59: 29 GMT + 0200(Mitteleuropäische Sommerzeit),
        _remoteAddress: '::1',
            body: { },
route: 
   Route {
    path: '/directupload',
        stack:
    [Layer {
        handle: [λ: multerMiddleware],
        name: 'multerMiddleware',
        params: undefined,
        path: undefined,
        keys: [],
        regexp: { /^\/? $ / i fast_star: false, fast_slash: false },
method: 'post' },
        Layer {
    handle: [λ],
        name: '<anonymous>',
            params: undefined,
                path: undefined,
                    keys: [],
                        regexp: { /^\/?$/i fast_star: false, fast_slash: false },
    method: 'post'
} ],
methods: { post: true } },
[Symbol(kCapture)]: false,
    [Symbol(kHeaders)]:
{
    host: 'localhost:9999',
        connection: 'keep-alive',
            'content-length': '1979904',
                pragma: 'no-cache',
                    'cache-control': 'no-cache',
                        'sec-ch-ua': '"Chromium";v="112", "Google Chrome";v="112", "Not:A-Brand";v="99"',
                            'sec-ch-ua-platform': '"macOS"',
                                'sec-ch-ua-mobile': '?0',
                                    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36',
                                        'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryUfa6vPzmTLoOdtCJ',
                                            accept: '*/*',
                                                origin: 'http://localhost:3000',
                                                    'sec-fetch-site': 'same-site',
                                                        'sec-fetch-mode': 'cors',
                                                            'sec-fetch-dest': 'empty',
                                                                referer: 'http://localhost:3000/',
                                                                    'accept-encoding': 'gzip, deflate, br',
                                                                        'accept-language': 'de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7'
},
[Symbol(kHeadersCount)]: 36,
    [Symbol(kTrailers)]: null,
        [Symbol(kTrailersCount)]: 0 }
  ​​​​​at ​​​​​​​​req​​​ ​index.js: 39

{
    fieldname: 'file',
        originalname: 'tretbott.jpg',
            encoding: '7bit',
                mimetype: 'image/jpeg'
}
  ​​​​​at ​​​​​​​​file​​​ ​index.js: 40

Error: Fehler beim Hochladen: "contentSize" is required 
    at fileFilter(file:///Users/supercoder/Desktop/96_Tag_cloudinary_Bilder_speichern/backEnd/index.js?session=wryce:35:34) 
    at wrappedFileFilter(/Users/supercoder / Desktop /96_Tag_cloudinary_Bilder_speichern / backEnd / node_modules / multer / index.js: 44: 7) 
    at Multipart.< anonymous > (/Users/supercoder / Desktop /96_Tag_cloudinary_Bilder_speichern / backEnd / node_modules / multer / lib / make - middleware.js: 107: 7) 
    at Multipart.emit(node: events: 513: 28) 
    at HeaderParser.cb(/Users/supercoder / Desktop /96_Tag_cloudinary_Bilder_speichern / backEnd / node_modules / busboy / lib / types / multipart.js: 358: 14) 
    at HeaderParser.push(/Users/supercoder / Desktop /96_Tag_cloudinary_Bilder_speichern / backEnd / node_modules / busboy / lib / types / multipart.js: 162: 20) 
    at SBMH.ssCb[as _cb](/Users/supercoder / Desktop /96_Tag_cloudinary_Bilder_speichern / backEnd / node_modules / busboy / lib / types / multipart.js: 394: 37) 
    at feed(/Users/supercoder / Desktop /96_Tag_cloudinary_Bilder_speichern / backEnd / node_modules / streamsearch / lib / sbmh.js: 248: 10) 
    at SBMH.push(/Users/supercoder / Desktop /96_Tag_cloudinary_Bilder_speichern / backEnd / node_modules / streamsearch / lib / sbmh.js: 104: 16) 
    at Multipart._write(/Users/supercoder / Desktop /96_Tag_cloudinary_Bilder_speichern / backEnd / node_modules / busboy / lib / types / multipart.js: 567: 19) 
    at writeOrBuffer(node: internal / streams / writable: 392: 12) 
    at _write(node: internal / streams / writable: 333: 10) 
    at Writable.write(node: internal / streams / writable: 337: 10) 
    at IncomingMessage.ondata(node: internal / streams / readable: 766: 22) 
    at IncomingMessage.emit(node: events: 513: 28) 
    at Readable.read(node: internal / streams / readable: 539: 10) 
    at flow(node: internal / streams / readable: 1023: 34) 
    at resume_(node: internal / streams / readable: 1004: 3) 
    at process.processTicksAndRejections(node: internal / process / task_queues: 82: 21) 
